@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using System.Text.RegularExpressions
@{
    Layout = "masterLayout.cshtml";
    ViewBag.Title = Model.Value("pageTitle");

//
    var author = Model.HasValue("articleAuthor") ? Model.Value<string>("articleAuthor") : "Bereketli Topraklar";
    var excerpt = Model.Value<string>("excerpt");
    var pageTitle = Model.HasValue("pageTitle") ? Model.Value<string>("pageTitle") : Model.Name;
    var metaDescription = Model.HasValue("metaDescription") ? Model.Value<string>("metaDescription") : excerpt;
    var articleAuthor = Model.HasValue("articleAuthor") ? Model.Value<string>("articleAuthor") : "Bereketli Topraklar";

        // URL oluşturma - düzeltilmiş
    var currentUrl = $"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}";
    var siteUrl = $"{Context.Request.Scheme}://{Context.Request.Host}";
//
    var featuredImage = Model.Value<IPublishedContent>("featuredImage");

    var postDate = Model.Value<DateTime>("postDate");
    if (postDate == default(DateTime)) {
        postDate = Model.CreateDate;
    }
    var formattedDate = postDate.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("tr-TR"));
    
    // İçindekiler için H2 ve H3 başlıkları çıkarma
    var postContent = Model.Value<string>("postContent");
    var tocItems = new List<dynamic>();
    
    if (!string.IsNullOrEmpty(postContent))
    {
        // H2 ve H3 başlıklarını bulma regex'i
        var headingRegex = new Regex(@"<(h[23])[^>]*>(.*?)</\1>", RegexOptions.IgnoreCase);
        var matches = headingRegex.Matches(postContent);
        
        int counter = 1;
        foreach (Match match in matches)
        {
            var level = match.Groups[1].Value.ToLower(); // h2 veya h3
            var content = Regex.Replace(match.Groups[2].Value, "<.*?>", string.Empty); // HTML etiketlerini temizle
            
            // HTML entity'lerini decode et
            content = System.Net.WebUtility.HtmlDecode(content);
            
            var anchor = $"heading-{counter}";
            
            tocItems.Add(new { 
                Level = level, 
                Text = content.Trim(), 
                Anchor = anchor,
                Id = counter
            });
            counter++;
        }
        
        // İçeriği anchor linklerle güncelleme
        counter = 1;
        postContent = headingRegex.Replace(postContent, match => {
            var tag = match.Groups[1].Value;
            var content = match.Groups[2].Value;
            var result = $"<{tag} id=\"heading-{counter}\">{content}</{tag}>";
            counter++;
            return result;
        });
    }
    
    // --- YENİ EKLENEN KOD BAŞLANGICI ---
    var blogPage = Model.Parent; 
    var otherPosts = Enumerable.Empty<IPublishedContent>();
    if (blogPage != null)
    {
        // Mevcut yazıyı hariç tutarak, tarihe göre sıralayıp en son 10 yazıyı alıyoruz
        otherPosts = blogPage.Children()
                             .Where(x => x.IsVisible() && x.Id != Model.Id)
                             .OrderByDescending(x => x.Value<DateTime>("postDate"))
                             .Take(10);
    }
    // --- YENİ EKLENEN KOD SONU ---
}

<link href="/css/blog.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"/>

<div class="container blog-post-container">
    <article>
        <header class="blog-post-header">
            <h1 class="blog-post-title">@Model.Value("pageTitle")</h1>
            <div class="blog-post-meta">
                <span>@formattedDate</span>
                &bull;
                <span>Yazar: @(Model.HasValue("articleAuthor") ? Model.Value("articleAuthor") : "Bereketli Topraklar")</span>
            </div>
        </header>
        @if (featuredImage != null)
        {
            <div class="blog-post-featured-image">
                <img src="@featuredImage.Url()" alt="@Model.Name" />
            </div>
        }
        @* İÇİNDEKİLER BÖLÜMÜ *@
        @if (tocItems.Any())
        {
            <div class="table-of-contents">
                <div class="toc-header" onclick="toggleTOC()">
                    <h3 class="toc-title">
                        <i class="toc-icon">📋</i>
                        İçindekiler
                        <i class="toc-arrow">▼</i>
                    </h3>
                </div>
                <div class="toc-content" id="tocContent">
                    <ul class="toc-list">
                        @foreach (var item in tocItems)
                        {
                            <li class="toc-item toc-@item.Level">
                                <a href="#@item.Anchor" class="toc-link" data-anchor="@item.Anchor">
                                    @item.Text
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }

        

        <div class="blog-post-content">
            @Html.Raw(postContent)
        </div>
    </article>
</div>

@* --- YENİ KAYDIRMALI BLOG BÖLÜMÜ --- *@
@if (otherPosts.Any())
{
    <section class="other-posts-section">
        <div class="container">
            <h2 class="other-posts-title">Diğer Yazılarımıza Göz Atın</h2>
            <div class="other-posts-slider">
                <div class="swiper-container">
                    <div class="swiper-wrapper">
                        @foreach (var post in otherPosts)
                        {
                            var otherFeaturedImage = post.Value<IPublishedContent>("featuredImage");
                            var otherExcerpt = post.Value<string>("excerpt");
                            
                            var otherPostDate = post.Value<DateTime>("postDate");
                            if (otherPostDate == default(DateTime)) {
                                otherPostDate = post.CreateDate;
            }
                            var otherFormattedDate = otherPostDate.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("tr-TR"));

                            <div class="swiper-slide">
                                <div class="blog-card">
                                    @if (otherFeaturedImage != null)
                                    {
                                        <div class="blog-card-image">
                                            <a href="@post.Url()">
                                                <img src="@otherFeaturedImage.Url()" alt="@post.Name">
                                            </a>
                                        </div>
                                    }
                                    <div class="blog-card-content">
                                        <div class="blog-card-date">@otherFormattedDate</div>
                                        <a href="@post.Url()" class="blog-card-title">@post.Name</a>
                                        @if (!string.IsNullOrWhiteSpace(otherExcerpt))
                                        {
                                            @Html.Raw(otherExcerpt)
                                        }
                                        <div class="blog-card-author">
                                            Yazar: @(post.HasValue("articleAuthor") ? post.Value("articleAuthor") : "Bereketli Topraklar")
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="swiper-pagination"></div>
                </div>

                <div class="swiper-button-prev"></div>
                <div class="swiper-button-next"></div>
            </div>
        </div>
    </section>
}

@* --- İÇİNDEKİLER JAVASCRIPT --- *@
<script>
// İçindekiler dropdown açma/kapama
function toggleTOC() {
    const tocContent = document.getElementById('tocContent');
    const arrow = document.querySelector('.toc-arrow');
    
    if (tocContent.classList.contains('toc-open')) {
        tocContent.classList.remove('toc-open');
        arrow.textContent = '▼';
    } else {
        tocContent.classList.add('toc-open');
        arrow.textContent = '▲';
    }
}

// İçindekiler linklerini dinle
const tocLinks = document.querySelectorAll(".toc-link");

tocLinks.forEach(link => {
    link.addEventListener('click', function(e) {
        e.preventDefault();
        
        const anchor = this.getAttribute('data-anchor');
        const targetElement = document.getElementById(anchor);

        if (targetElement) {
            // İçindekiler listesini kapat
            const tocContent = document.getElementById('tocContent');
            const arrow = document.querySelector('.toc-arrow');
            if (tocContent && tocContent.classList.contains('toc-open')) {
                tocContent.classList.remove('toc-open');
                arrow.textContent = '▼';
            }
            
            // 50px yukarıya kaydır
            window.scrollTo({
                top: targetElement.offsetTop - 140,
                behavior: 'smooth'
            });
        }
    });
});

// Sayfa yüklendiğinde aktif başlığı highlight etme
window.addEventListener('scroll', function() {
    const headings = document.querySelectorAll('h2[id^="heading-"], h3[id^="heading-"]');
    const tocLinks = document.querySelectorAll('.toc-link');
    
    let activeHeading = null;
    
    headings.forEach(heading => {
        const rect = heading.getBoundingClientRect();
        if (rect.top <= 150 && rect.bottom >= 0) {
            activeHeading = heading.id;
        }
    });
    
    tocLinks.forEach(link => {
        link.classList.remove('active');
        if (activeHeading && link.getAttribute('data-anchor') === activeHeading) {
            link.classList.add('active');
        }
    });
});
</script>

@* --- SLIDER'I BAŞLATMAK İÇİN GEREKLİ JAVASCRIPT --- *@
<script>
document.addEventListener('DOMContentLoaded', function () {
    // Sadece bu sayfada slider varsa çalıştır
    if (document.querySelector('.other-posts-slider .swiper-container')) {
        var swiper = new Swiper('.other-posts-slider .swiper-container', {
            // Parametreler
            slidesPerView: 1,
            spaceBetween: 30,
            loop: true,
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            breakpoints: {
                // 640px ve üzeri
                640: {
                    slidesPerView: 2,
                    spaceBetween: 20,
                },
                // 992px ve üzeri
                992: {
                    slidesPerView: 3,
                    spaceBetween: 30,
                }
            }
        });
    }
});
</script>

@* --- START: CORRECTED JSON-LD SCRIPT --- *@
<script type="application/ld+json">
{
 "@@context": "https://schema.org",
 "@@type": "Article",
 "headline": "@Html.Raw(pageTitle?.Replace("\"", "\\\""))",
 "description": "@Html.Raw(Regex.Replace(metaDescription ?? "", "<.*?>", string.Empty).Replace("\"", "\\\""))",
 @if (featuredImage != null)
 {
   <text>"image": [
     "@featuredImage.Url()?width=1200&height=630&quality=85",
     "@featuredImage.Url()?width=800&height=600&quality=85",
     "@featuredImage.Url()?width=400&height=300&quality=85"
   ],</text>
 }
 "author": {
   "@@type": "Person",
   "name": "@Html.Raw(articleAuthor?.Replace("\"", "\\\""))",
   "url": "@siteUrl"
 },
 "publisher": {
   "@@type": "Organization",
   "name": "Bereketli Topraklar",
   "url": "@siteUrl",
   "logo": {
     "@@type": "ImageObject",
     "url": "@siteUrl/media/lq2jzklk/download-1.svg",
     "width": 180,
     "height": 45
   }
 },
 "datePublished": "@postDate.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")",
 "dateModified": "@Model.UpdateDate.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")",
 "mainEntityOfPage": {
   "@@type": "WebPage",
   "@@id": "@currentUrl"
 },
 "articleSection": "Blog",
 "keywords": "@Html.Raw((Model.HasValue("tags") ? Model.Value<string>("tags") : "emlak, arsa, villa, yatırım")?.Replace("\"", "\\\""))",
 "wordCount": @(Model.HasValue("postContent") ? (Model.Value<string>("postContent")?.Length ?? 500) / 5 : 500),
 "inLanguage": "tr-TR",
 "isAccessibleForFree": true,
 "about": {
   "@@type": "Organization",
   "name": "Bereketli Topraklar"
 }
}
</script>
@* --- END: CORRECTED JSON-LD SCRIPT --- *@